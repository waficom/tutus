/*
 * File: app/controller/Main.js
 *
 * This file was generated by Sencha Architect version 3.0.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('App.controller.Main', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'usersGrid',
            selector: '#usersgrid'
        },
        {
            ref: 'addBtn',
            selector: '#addBtn'
        },
        {
            ref: 'removeBtn',
            selector: '#removeBtn'
        }
    ],

    onGridpanelAfterRender: function(component, eOpts) {
        this.getUsersGrid().getStore().load();
    },

    onAddButtonClick: function(button, e, eOpts) {
        var grid = this.getUsersGrid(),
            plugin = grid.editingPlugin,
            store = grid.getStore(),
            records;

        plugin.cancelEdit();

        records = store.add({
            fullname:'New User',
            active:true
        });

        plugin.startEdit(records[0], 2);
    },

    onRemoveButtonClick: function(button, e, eOpts) {
        var grid = this.getUsersGrid(),
            plugin = grid.editingPlugin,
            store = grid.getStore(),
            records = grid.getSelectionModel().getSelection();

        plugin.cancelEdit();

        store.remove(records[0]);
        store.sync();
    },

    onCancelEdit: function(plugin) {
        plugin.view.getStore().rejectChanges();
    },

    onEdit: function(plugin) {
        plugin.view.getStore().sync();
    },

    onGridpanelSelectionChange: function(model, selected, eOpts) {
        this.getRemoveBtn().setDisabled(selected.length === 0);
    },

    init: function(application) {
        this.control({
            "#usersgrid": {
                afterrender: this.onGridpanelAfterRender,
                canceledit: this.onCancelEdit,
                edit: this.onEdit,
                selectionchange: this.onGridpanelSelectionChange
            },
            "#addBtn": {
                click: this.onAddButtonClick
            },
            "#removeBtn": {
                click: this.onRemoveButtonClick
            }
        });
    }

});
